//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.ComponentModel;
using System.Data.EntityClient;
using System.Data.Objects;
using System.Data.Objects.DataClasses;
using System.Linq;
using System.Runtime.Serialization;
using System.Xml.Serialization;

[assembly: EdmSchemaAttribute()]
namespace EleMech_Wiki_5.Models.EF
{
    #region Contexts
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    public partial class SampleEntities : ObjectContext
    {
        #region Constructors
    
        /// <summary>
        /// Initializes a new SampleEntities object using the connection string found in the 'SampleEntities' section of the application configuration file.
        /// </summary>
        public SampleEntities() : base("name=SampleEntities", "SampleEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new SampleEntities object.
        /// </summary>
        public SampleEntities(string connectionString) : base(connectionString, "SampleEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new SampleEntities object.
        /// </summary>
        public SampleEntities(EntityConnection connection) : base(connection, "SampleEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        #endregion
    
        #region Partial Methods
    
        partial void OnContextCreated();
    
        #endregion
    
        #region ObjectSet Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<OrgChartConnection> OrgChartConnections
        {
            get
            {
                if ((_OrgChartConnections == null))
                {
                    _OrgChartConnections = base.CreateObjectSet<OrgChartConnection>("OrgChartConnections");
                }
                return _OrgChartConnections;
            }
        }
        private ObjectSet<OrgChartConnection> _OrgChartConnections;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<OrgChartShape> OrgChartShapes
        {
            get
            {
                if ((_OrgChartShapes == null))
                {
                    _OrgChartShapes = base.CreateObjectSet<OrgChartShape>("OrgChartShapes");
                }
                return _OrgChartShapes;
            }
        }
        private ObjectSet<OrgChartShape> _OrgChartShapes;

        #endregion

        #region AddTo Methods
    
        /// <summary>
        /// Deprecated Method for adding a new object to the OrgChartConnections EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToOrgChartConnections(OrgChartConnection orgChartConnection)
        {
            base.AddObject("OrgChartConnections", orgChartConnection);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the OrgChartShapes EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToOrgChartShapes(OrgChartShape orgChartShape)
        {
            base.AddObject("OrgChartShapes", orgChartShape);
        }

        #endregion

    }

    #endregion

    #region Entities
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="SampleModel", Name="OrgChartConnection")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class OrgChartConnection : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new OrgChartConnection object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        public static OrgChartConnection CreateOrgChartConnection(global::System.Int32 id)
        {
            OrgChartConnection orgChartConnection = new OrgChartConnection();
            orgChartConnection.Id = id;
            return orgChartConnection;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value, "Id");
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> FromShapeId
        {
            get
            {
                return _FromShapeId;
            }
            set
            {
                OnFromShapeIdChanging(value);
                ReportPropertyChanging("FromShapeId");
                _FromShapeId = StructuralObject.SetValidValue(value, "FromShapeId");
                ReportPropertyChanged("FromShapeId");
                OnFromShapeIdChanged();
            }
        }
        private Nullable<global::System.Int32> _FromShapeId;
        partial void OnFromShapeIdChanging(Nullable<global::System.Int32> value);
        partial void OnFromShapeIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> ToShapeId
        {
            get
            {
                return _ToShapeId;
            }
            set
            {
                OnToShapeIdChanging(value);
                ReportPropertyChanging("ToShapeId");
                _ToShapeId = StructuralObject.SetValidValue(value, "ToShapeId");
                ReportPropertyChanged("ToShapeId");
                OnToShapeIdChanged();
            }
        }
        private Nullable<global::System.Int32> _ToShapeId;
        partial void OnToShapeIdChanging(Nullable<global::System.Int32> value);
        partial void OnToShapeIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Text
        {
            get
            {
                return _Text;
            }
            set
            {
                OnTextChanging(value);
                ReportPropertyChanging("Text");
                _Text = StructuralObject.SetValidValue(value, true, "Text");
                ReportPropertyChanged("Text");
                OnTextChanged();
            }
        }
        private global::System.String _Text;
        partial void OnTextChanging(global::System.String value);
        partial void OnTextChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> FromPointX
        {
            get
            {
                return _FromPointX;
            }
            set
            {
                OnFromPointXChanging(value);
                ReportPropertyChanging("FromPointX");
                _FromPointX = StructuralObject.SetValidValue(value, "FromPointX");
                ReportPropertyChanged("FromPointX");
                OnFromPointXChanged();
            }
        }
        private Nullable<global::System.Int32> _FromPointX;
        partial void OnFromPointXChanging(Nullable<global::System.Int32> value);
        partial void OnFromPointXChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> FromPointY
        {
            get
            {
                return _FromPointY;
            }
            set
            {
                OnFromPointYChanging(value);
                ReportPropertyChanging("FromPointY");
                _FromPointY = StructuralObject.SetValidValue(value, "FromPointY");
                ReportPropertyChanged("FromPointY");
                OnFromPointYChanged();
            }
        }
        private Nullable<global::System.Int32> _FromPointY;
        partial void OnFromPointYChanging(Nullable<global::System.Int32> value);
        partial void OnFromPointYChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> ToPointX
        {
            get
            {
                return _ToPointX;
            }
            set
            {
                OnToPointXChanging(value);
                ReportPropertyChanging("ToPointX");
                _ToPointX = StructuralObject.SetValidValue(value, "ToPointX");
                ReportPropertyChanged("ToPointX");
                OnToPointXChanged();
            }
        }
        private Nullable<global::System.Int32> _ToPointX;
        partial void OnToPointXChanging(Nullable<global::System.Int32> value);
        partial void OnToPointXChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> ToPointY
        {
            get
            {
                return _ToPointY;
            }
            set
            {
                OnToPointYChanging(value);
                ReportPropertyChanging("ToPointY");
                _ToPointY = StructuralObject.SetValidValue(value, "ToPointY");
                ReportPropertyChanged("ToPointY");
                OnToPointYChanged();
            }
        }
        private Nullable<global::System.Int32> _ToPointY;
        partial void OnToPointYChanging(Nullable<global::System.Int32> value);
        partial void OnToPointYChanged();

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="SampleModel", Name="OrgChartShape")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class OrgChartShape : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new OrgChartShape object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        public static OrgChartShape CreateOrgChartShape(global::System.Int32 id)
        {
            OrgChartShape orgChartShape = new OrgChartShape();
            orgChartShape.Id = id;
            return orgChartShape;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value, "Id");
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String JobTitle
        {
            get
            {
                return _JobTitle;
            }
            set
            {
                OnJobTitleChanging(value);
                ReportPropertyChanging("JobTitle");
                _JobTitle = StructuralObject.SetValidValue(value, true, "JobTitle");
                ReportPropertyChanged("JobTitle");
                OnJobTitleChanged();
            }
        }
        private global::System.String _JobTitle;
        partial void OnJobTitleChanging(global::System.String value);
        partial void OnJobTitleChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Color
        {
            get
            {
                return _Color;
            }
            set
            {
                OnColorChanging(value);
                ReportPropertyChanging("Color");
                _Color = StructuralObject.SetValidValue(value, true, "Color");
                ReportPropertyChanged("Color");
                OnColorChanged();
            }
        }
        private global::System.String _Color;
        partial void OnColorChanging(global::System.String value);
        partial void OnColorChanged();

        #endregion

    }

    #endregion

}
